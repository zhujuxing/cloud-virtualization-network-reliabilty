%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 2.pdf
%%Creator: Adobe Acrobat 21.1.0
%%For: zhujuxing
%%CreationDate: 2021/3/21, 14:24:01
%%BoundingBox: -1 0 875 748
%%HiResBoundingBox: -0 0 874.4766 747.4943
%%CropBox: -0 0 874.4766 747.4943
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1180 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164464, 2020/06/15-10:20:05        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Visio® 2019"
   pdf:Keywords=""
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Visio® 2019"
   xmp:CreateDate="2021-03-21T13:57:38+08:00"
   xmp:ModifyDate="2021-03-21T14:23:40+08:00"
   xmp:MetadataDate="2021-03-21T14:23:40+08:00"
   xmpMM:DocumentID="uuid:342B0F50-BAD5-4D6D-BAAD-F6C14C0278D4"
   xmpMM:InstanceID="uuid:349619f1-5062-4057-a073-21c623f631c4">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>zhu juxing</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -747.494 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-6.10352e-5 0 mo
-6.10352e-5 747.494 li
874.477 747.494 li
874.477 0 li
cp
clp
gsave
-.78479 747.839 mo
875.215 747.839 li
875.215 -.161255 li
-.78479 -.161255 li
cp
clp
gsave
-659.785 1222.84 mo
987.965 1222.84 li
987.965 -490.911 li
-659.785 -490.911 li
cp
eclp
.25 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
-659.785 1222.92 mo
987.995 1222.92 li
987.995 -490.915 li
-659.785 -490.915 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.216 sep
@
grestore
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
400.225 189.679 mo
469.075 133.559 li
false sop
/1 
[/DeviceCMYK] /CSA add_res
.75259 .511162 0 0 cmyk
@
400.225 189.679 mo
683.195 133.559 li
@
.25 lw
2 lc
0 lj
[4 2 ] 0 dsh
845.425 214.349 mo
845.425 190.089 814.045 170.409 775.335 170.409 cv
736.625 170.409 705.245 190.089 705.245 214.349 cv
705.245 238.619 736.625 258.289 775.335 258.289 cv
814.045 258.289 845.425 238.619 845.425 214.349 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
1 lw
1 lc
1 lj
[] 0 dsh
784.315 195.299 mo
784.315 237.939 li
.75259 .511162 0 0 cmyk
@
748.695 234.949 mo
749.185 195.299 li
@
739.535 234.949 mo
739.535 229.889 743.635 225.789 748.695 225.789 cv
753.755 225.789 757.855 229.889 757.855 234.949 cv
757.855 240.009 753.755 244.119 748.695 244.119 cv
743.635 244.119 739.535 240.009 739.535 234.949 cv
cp
.751797 0 .870695 0 cmyk
ef
.25 lw
2 lc
0 lj
739.535 234.949 mo
739.535 229.889 743.635 225.789 748.695 225.789 cv
753.755 225.789 757.855 229.889 757.855 234.949 cv
757.855 240.009 753.755 244.119 748.695 244.119 cv
743.635 244.119 739.535 240.009 739.535 234.949 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
580.385 191.689 mo
469.075 133.559 li
.75259 .511162 0 0 cmyk
@
580.385 191.689 mo
683.195 133.559 li
@
749.185 195.299 mo
469.075 133.559 li
@
749.185 195.299 mo
683.195 133.559 li
@
683.195 133.559 mo
784.315 195.299 li
@
469.075 133.559 mo
784.315 195.299 li
@
683.195 133.559 mo
815.035 195.299 li
@
469.075 133.559 mo
815.035 195.299 li
@
775.155 195.299 mo
775.155 190.239 779.255 186.139 784.315 186.139 cv
789.375 186.139 793.475 190.239 793.475 195.299 cv
793.475 200.359 789.375 204.459 784.315 204.459 cv
779.255 204.459 775.155 200.359 775.155 195.299 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
775.155 195.299 mo
775.155 190.239 779.255 186.139 784.315 186.139 cv
789.375 186.139 793.475 190.239 793.475 195.299 cv
793.475 200.359 789.375 204.459 784.315 204.459 cv
779.255 204.459 775.155 200.359 775.155 195.299 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
740.025 195.299 mo
740.025 190.239 744.125 186.139 749.185 186.139 cv
754.245 186.139 758.345 190.239 758.345 195.299 cv
758.345 200.359 754.245 204.459 749.185 204.459 cv
744.125 204.459 740.025 200.359 740.025 195.299 cv
cp
.695583 .0949111 0 0 cmyk
ef
740.025 195.299 mo
740.025 190.239 744.125 186.139 749.185 186.139 cv
754.245 186.139 758.345 190.239 758.345 195.299 cv
758.345 200.359 754.245 204.459 749.185 204.459 cv
744.125 204.459 740.025 200.359 740.025 195.299 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
.9529 sep
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KKFUDS+SimHei-GBK-EUC-H)
%%Title: (KKFUDS+SimHei-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KKFUDS+SimHei-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-12 -156 996 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28562 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300013909A50A2AB7EE3C36B6EFE4BFA05B0B1D6F8
CE08BF0CAB16ED4> |
49 <001C60D8A8C9B7A73DB6EB6131D318F7E84DB73FD21DF0F54C85CEDA927B
AAB83DB457B7888AE2E081978C987EA26D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KKFUDS+SimHei-GBK-EUC-H-Identity-H /Identity-H 0 [/KKFUDS+SimHei-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
774.465 169.269 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
774.465 169.269 mo
(\0001) false chp
.68643 lw
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
38 <001C60D8A8C9B7A73DB6B123CBD81CAD7AF28B38FB9EB08EC71409E6FB90
89D4D27A9E65E44CCC444671B17FB95292DDBF4A54D6A82C972D8D8821E3CB43
5D32406C04B9A2D9F2F267EBB4BEB62F7070F09E2AFB12BC263ACE2A5C93FB7E
088BCBEFF15A4A59BB34C6C07FC8D462CF54B18A1495EDBD4A040C7484640CA1
28F3471FE7E2> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
786.465 169.269 mo
(\000&)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
786.465 169.269 mo
(\000&) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
40 <001C60D8A8C9B7A73DB6E3CF41DBA802750883B3EB9083BA03722D29D8CF
05A918AB073DE48E3BC16F4BC7594E88> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
798.465 169.269 mo
(\000\()sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
798.465 169.269 mo
(\000\() false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
39 <001C60D8A8C9B7A73DB6A3724A0885CED30B145F08FEF820CA8DADA9682B
E0CA3A9C91A23D7AAC9A8682C179086981F763688F27B196AADABF8CBFE9898A
F5C5AF9972AA62513BC379B1F5F9D2A0172DD35302F801E479734DADFB65EE3F
E3> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
558.815 113.459 mo
(\000')sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
558.815 113.459 mo
(\000') false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
570.84 113.459 mo
(\000&)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
570.84 113.459 mo
(\000&) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
42 <001C60D8A8C9B7A73DB6EB6F498756E76C608ED5E8CE5912867B94E637C0
EFFF46F78EE7285E2C5E408D7F943137E7064B2181E49B6F79F24A9B7415FB4D
684C4DFB6A788022C725E0D6F6BFAA11632309DFC9C17D142EF890E51DBE283B
F0772CEE47C47018E38E1428C7445C3C9B1DAF55CD1E33A831331FE843E7A3D5
8505DABF4CCB4FF7A4C7DA08CE440E033D7A3D0778> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
582.865 113.459 mo
(\000*)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
582.865 113.459 mo
(\000*) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
58 <001C60D8A8C9B7A73DB6A5DF90D2AA9EF50CB24735376ABC21B7CA5B6A50
66026B8A20B16DA64CAB30754EBB347B7FE7F10827D88E41BB5E2135CE67DA46> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
594.89 113.459 mo
(\000:)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
594.89 113.459 mo
(\000:) false chp
@
358.365 88.2087 mo
468.925 88.2087 li
475.465 88.2087 480.765 82.9087 480.765 76.3688 cv
480.765 63.4087 li
480.765 56.8688 475.465 51.5687 468.925 51.5687 cv
358.365 51.5687 li
351.835 51.5687 346.535 56.8688 346.535 63.4087 cv
346.535 76.3688 li
346.535 82.9087 351.835 88.2087 358.365 88.2087 cv
cp
.75259 .511162 0 0 cmyk
ef
.25 lw
358.365 88.2087 mo
468.925 88.2087 li
475.465 88.2087 480.765 82.9087 480.765 76.3688 cv
480.765 63.4087 li
480.765 56.8688 475.465 51.5687 468.925 51.5687 cv
358.365 51.5687 li
351.835 51.5687 346.535 56.8688 346.535 63.4087 cv
346.535 76.3688 li
346.535 82.9087 351.835 88.2087 358.365 88.2087 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KKFUDT+SimHei-GBK-EUC-H)
%%Title: (KKFUDT+SimHei-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KKFUDT+SimHei-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-12 -156 996 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28562 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300013909A50A2AB7EE3C36B6EFE4BFA05B0B1D6F8
CE08BF0CAB16ED4> |
1104 <001C60D8A8C9B5EE310DEB874CE79D17384213038E074825A9418F33EB
9143721861D20A01964EC3074433FE0C7E6A94E022B4A2825FA1AEDE886A5304
5A8529FC4352B9AD8EFE113A2F6BCD50F5FC67967D027273A2862A6CE1788683
0873B4BA1029FD052D94A93A238D40ADEFEF2EC85C1CCC8C51EA0FB0C6BC769D
1530A4A6336DC64C2F7E26594FB33BF929428201B92FB811AB25338FB9198101
CA4DFAEDAF0188D26C6C3BF1F7A0432D4A899529> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KKFUDT+SimHei-GBK-EUC-H-Identity-H /Identity-H 0 [/KKFUDT+SimHei-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
359.865 77.3387 mo
(\004P)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
359.865 77.3387 mo
(\004P) false chp
.68571 lw
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
2263 <001C60D8A8C9B5EE3102603FF13037056366FE35587957C60F747BE3B4
4CFADDC9278222F70EDC2A26530456827CEBD5907FDFFD523E3A7A1F84F7CEE0
06EAB07D341ED361249A989F8210FDCF38B159D5E80B09CFB7E699168D64D7E6
27B7AA5597564CA9FC46003F8B7FF1689A6B21072207535D4EB141EC2F235E1C
D0BEB3B430CA5E706DBB253C206405909D95D11B095EF72FA095A957D5BF8A15
C8F0A921AC8DF9A42C7B1A4EAA9D2521F3F182D80A46F3601D93619C104E5279
E466434D1EDEA0A64546141995AB0870A63A0B76C2A73BA76A2C74E0636ED16B
F80F9638FE7FA7DED8B838E54AC98ED4578A7E65FD48ED1FBE39B9469BE3BBAA
3771BED9779E3E1F6DAE3DFA611EA6BA2F47B2D0F6DF125C0B8351C8DE826078
9CC06AFA11B0308B8D54679A16A14D095EC3F137EB859E803B60B376> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
383.89 77.3387 mo
(\010\327)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
383.89 77.3387 mo
(\010\327) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
13566 <001C60D8A8C9B5EE3103EE1842BB902FBC4C5D6B68761D5FED9672A28
DCCF41BE80B74B6283ED2B9C8C9C6760031F96B3211F4C48776821352FEA0491
7E4963D7885F4351CC9C04F54845258FD1A1337A2286700F0C0CE3D5DEE549D5
D298A2AE7559C42929A5BC67C741EEBB36E2B8D6B00E25C782A926CA677D7214
25AF04153CDBC23E86469ED571CD7E6D98BF03629F5E1CEBB990D8917B1F2BE5
55E59C467338E45795DF73B1AA7374D157EDEF511A36C7B599580172F1A2B3A8
D560508A259E914C76D24847E44B6063BA75468BD78574AA6D3B9E956CB27768
009D94255073E9498DB9389BF7BADD7A71528830720FC76C3492E4BDD50C5C04
6DD6104F05B844ED132B4B4DFEAE28E62C4DC077A89BEFB66AA4A50E624B1E4A
D2D3EEECAAF67A682DD4C632006F4C4AEF6D67EC4F0FC2C4065A434FEEF4FA90
36147F3C7AECCA4F27D81CC845D6FFD56BC71425E79A9DA8BED3B722C347D740
8531812D68939F52176EF6F8AA3FEA3E69AF859082FC51363AD6E0199D5F0199
B64C6FC0FA2187273AA4DCDEC52931F176A2078678343DA9C4ACD0EB2C75D21C
DE1D21A1D854531C7E9A76C65740E30A399C67DA6EF8DD824E5F7D8F1FC398FF
A96C9ED923A55AC> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
407.915 77.3387 mo
(4\376)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
407.915 77.3387 mo
(4\376) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
12581 <001C60D8A8C9B5EE31036D5F5C69E83754D69B6929F4281B43C4902F1
F493FF05B3F09C96A5C9074A0F3E04EB7CF6E243635873293B027AEC34950086
D0B8566FD85229E5CA12AD31E5B52264B5EC742D798FB1F36C12A18DE1B265AA
BB5DCF93F9B95BCE06DE1922D486DB1FC33F1C904097D643171965546C2A842D
5B4449565CD3BD27844C9F850CE416DC521D1977F4324229FA973B8FD63F519F
CDF92DCB61F241D4DB944DA1D720523EABA66C3B59980FBBE884B017B33AF1BC
A2D27EAB9632CD11619C5A3B34418393B29311D886785301A71B82D7B618FC23
8FC9EBCED4FE7F9F86B292FDEAF2934B3CB4A4521A3A7534448A969EA0A5500E
6E56FB75620B57C3CE89E344B5AA59B84A10A2B26BD46E69A6EF43D9C4533649
D5C58E7893887F3051339DAE54BE88D9C85855FE4395FD885EA693C72348E5AF
E32FEA9A9F532A8CB6D93DE89DEE3DC5AD25D5AD99E407A59F559A6FCDFAB42C
2829F82282E252D018FB514475FF006311404ECCB43D9A0A593C8896FB54E0FE
2D9E7AC0336DCEE9CCF2D60A7A71CDC8680CAEDCD2AD959032792890AB8CDC78
7BCD264CBC25B3BC097AF0ACF952B28704F166619093D4C8FF45743EB95F2C76
337> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
431.94 77.3387 mo
(1%)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
431.94 77.3387 mo
(1%) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
20 <001C60D8A8C9B7A73DB94A37249C74E69D4CD867DAC5FF844045E252FF58
851E08708B89CC9A> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
456.285 77.3387 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
456.285 77.3387 mo
(\000\024) false chp
@
657.545 88.1288 mo
786.285 88.1288 li
793.905 88.1288 800.075 81.9587 800.075 74.3387 cv
800.075 65.2787 li
800.075 57.6687 793.905 51.4888 786.285 51.4888 cv
657.545 51.4888 li
649.925 51.4888 643.755 57.6687 643.755 65.2787 cv
643.755 74.3387 li
643.755 81.9587 649.925 88.1288 657.545 88.1288 cv
cp
.75259 .511162 0 0 cmyk
ef
.25 lw
657.545 88.1288 mo
786.285 88.1288 li
793.905 88.1288 800.075 81.9587 800.075 74.3387 cv
800.075 65.2787 li
800.075 57.6687 793.905 51.4888 786.285 51.4888 cv
657.545 51.4888 li
649.925 51.4888 643.755 57.6687 643.755 65.2787 cv
643.755 74.3387 li
643.755 81.9587 649.925 88.1288 657.545 88.1288 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
0 sep
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
668.265 77.2688 mo
(\004P)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
668.265 77.2688 mo
(\004P) false chp
.68571 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
692.29 77.2688 mo
(\010\327)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
692.29 77.2688 mo
(\010\327) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
716.315 77.2688 mo
(4\376)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
716.315 77.2688 mo
(4\376) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
740.34 77.2688 mo
(1%)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
740.34 77.2688 mo
(1%) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
21 <001C60D8A8C9B7A73DF41B500652684CDF2066E3B97C90ACA15940B6AFD9
0638A98ECD77C758C26A5E57C84372D5F4BB8514E25C6F7E6D555E7660B43180
E0DF26F09FA6A703B35EFC39186B4524248E0CA6012C7AE684C96814E11FBFFC
587E70D2FEFD2159CB3DE15EB04ED4671CFE95913C8EFF2684B30B8EF5E0BCD9
7C80FF5C3696DF1A03D71BFD> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
764.685 77.2688 mo
(\000\025)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
764.685 77.2688 mo
(\000\025) false chp
@
1 lw
1 lc
1 lj
237.645 48.7288 mo
237.645 719.369 li
.75259 .511162 0 0 cmyk
@
241.165 718.489 mo
237.645 729.049 li
234.125 718.489 li
241.165 718.489 li
cp
ef
1 /0 /CSD get_res sepcs
.9529 sep
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
7212 <001C60D8A8C9B5EE31022E8C09BD7787CFE109E29CF4CEBD7A5A01533C
D9BEE8590E3C0248EFCD413F516852BD67C34F35B99EC9DA039BF9CE6474A88E
B19ED061F2881AEB55F628284647A17E81CBF5A68F64B3C8CADEE0BF8AB7BCC0
86247FE6D020752FF164FF3B482D463879089E5CBDCC94B374231FA8414F64DE
6932EDF2B39985FCED2308BDC61C3DEB195F1B2E464A4A711F96D6C671D0DD05
B4BB944B121E57C60C51C2493C20E718EE76350DA2776AD3438CF564EF67FFBC
26CFE20B5A87D9BEBD134D67973C40581EAA842009E518E6AD4FB29C4EB9D96D
CF56AA6ABF0CD0DCF7> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
214.185 24.2887 mo
(\034,)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
214.185 24.2887 mo
(\034,) false chp
.68571 lw
2 lc
0 lj
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
19498 <001C60D8A8C9B5EE3103B4E4E48CB64B37A7054DCAFA98BC7BEE720E4
880B9B29089A92593E308CBFA91326107CD774BC9C03D415FABB4C93255E36CE
686E018FBD6135444DF067E34615DB31A6B38268A4E29A24D8F61AE6C1E6DD81
EF8CB1D2CFE74D470F12D65BF2ED71359CB86D28ABBB73935DCB0E80AC0EEE47
5434E869D1E0C4BD63224EA07650231A4C84D3FE8103FEE21273A83E9CC3CB51
5B64FCC87FB4C6A1D4545C3F90539102E64FB8C3B9584E9808395E733B55EE47
3743B0ACDD7BF85C7E4D59595CE447D756C2BF3737AD72CD48D8DE25E710B4F4
33E8C6EB311D8CB200DA790287A> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
238.21 24.2887 mo
(L*)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
238.21 24.2887 mo
(L*) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
87 <001C60D8A8C9B7A73DB6F8E31EE633D91D4CF524D8490C846E3C9A35C76A
F79C85C4A3AA6BFBF27ECE6F79E9DD3DBD94D08138663C258FC912E3E6126F30
C7F9F470C7B6ED94EE50B7176224AE672A2EF582E09D76906E94A13F57E507BF
C5DB5452FFDE1ACB> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
232.245 53.0887 mo
(\000W)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
232.245 53.0887 mo
(\000W) false chp
.68643 lw
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
19 <001C60D8A8C9B7A73DF8058DCEB24662F5A96EB1808D2D98D933C70C989C
27EACE91EFF259323847266A5F41E1D10C909D8BD63D0D85DF9C2DF1A0AB4316
143B25229F58EDE7CABFFD7291DC31FE3FF6357E76A51F2E0D0F99C24C3182FB
1F695466006175B79D0870732A83C1BABF974FF10503C901BFE28B1BF121AA2A
CE6D866B900D3974B9F9BE5CB7CEAD8BDA0985446F7A415BD5C2C9B92750D0BD
5A5D3EF93DDCE8DA05B583CCEB8205267D> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
26.9952 201.739 mo
(\000\023)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
26.9952 201.739 mo
(\000\023) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
39.0952 201.739 mo
(\034,)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
39.0952 201.739 mo
(\034,) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
2161 <001C60D8A8C9B5EE310D33E6A487B3CB40FFDDA33236724E6797502A47
60F8A3D67EFCB3530175B1F77E03634223A545213BB14C11FCEE82207A9EC705
9EF4C31DB020622BDED2A30A8B5BFD790E8CEE252CEF668AB973F9956204520C
61AEB0422F31789A0308484E697A2C73F952BF2B3EDCCA6F14CC6C453C153024
10879F70701296A3D179D9C89B4009068E20C2C70F0417475DF1D158FFD42462
3015D49BCE00D7F6531483E22386588A3C980DBE0A97A5554B1B3F7DAE566015
75C39E4A5F1207AF0B90CC484F3C39735FD65A0E9142B6B823968AFECA037457
955208026BEF445CA45D1B0DA2541F233075C83012E9C3F016FB08FA8A912C7C
31D8568D1402DCC8858C427791B738C5E4BDDACFA10878848DF76E26B35C1407
80C0BABBB8E87D834654B11DD25D425086E04B4953FF05579E7436034EBEA9B5
CC55603A83D529F760615E8D86160AE11EF6B3C0060676162E657592573EB4CF
984D96C74ADB245644D81995D8774DA29B5B57E24F0163F8CA10936B0B188F26
E400D299736AA1E82152A158E9DE4D0D7BA7E9C6328A4C564A30F4CCF8352C7A
F7FE8A38DFDDE50802D3B31F378CEDD5DB4E71C5D22F97D694760772B6855389
76B2F00E8125CC62F5C1> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
63.0953 201.739 mo
(\010q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
63.0953 201.739 mo
(\010q) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
966 <001C60D8A8C9B5EE310D5F6D0FF512D81FCA69781709BF7A435940ACC27
26A7FBB7F0EBDB676> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
87.2852 201.739 mo
(\003\306)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
87.2852 201.739 mo
(\003\306) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
7190 <001C60D8A8C9B5EE310DC297637EE27917F1DB51DD844DBBD2B34CA34A
8F118C9E38C89EEC0E55C766D57BAC7352A8145ED890AC4F77F72BFBE759A77B
FABFAB433231E7C76BA743085B5F855FD2F0836064F6FB85EB3FD1ED7700652E
3348C7F8E032C16F395CFE70F6863E509F19ED2F5E2640E0736247B1F807E9BC
789FEF4D07A9A12854DFEFF6A448CA763858CA4089A99157AE56752328CEFC06
D499098B3DDBFC1C044E4E88F695BA42AB4DFC18D580D5FD295D2EFA03A6EF17
A55206FC7405BF7699F0F58645C13DEBC2CC> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
111.385 201.739 mo
(\034\026)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
111.385 201.739 mo
(\034\026) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
7035 <001C60D8A8C9B5EE3103A4CCF860571135FE503878984E312CAEF63E6B
F483F3AA477A4D4C0A3E5C5AC8829C882C694C643C84DA5A37196CA6F455ED70
4EF77A4FC89FBACBBFA77EC7E21FF3F34074A8F3AC5D562589F1AED6A4F14EF4
E0127259F0EF42A91053DFB5216418D5143C00864F5FA1FBE1FB28D82DC5361E
22D65AE9AF6839BEEA3C0AAA77E65EE7E3195D45D4CB9E68450781BB107B2439
D29B98A28328F47F2834CABF61E147B92599A75100734C03218AB21AA13E536B
2CFFCDDAABD9D9A45091B6E1F88A187BE717FA55C143BAE573CD059B9C09814F
0A8A8C77C75490F0CEAA415225F9451FA25C16DE2AE4CD934274C8C9BBB9549D
9B8CBA8B22328962667EF50311AB66E68AF1A522F4D84799F15494AF5C3E00F3
ACF280555D2AF67860B5112A2AC7A466271A8ED76CE33121EB56EAE4260B245D
ED6EB8EFDC41F2EFFA2A7B84F34ABDCF56> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
135.41 201.739 mo
(\033{)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
135.41 201.739 mo
(\033{) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
19666 <001C60D8A8C9B5EE3100934988891A426C7EE75EC37EE493A7CDB1089
503BD076A92D1DD2C75A92D9C509169C81038CBA11D4F7AB036C8DDC3FB1C0B2
09660AA9ED7324D2CDBC96C350FB3AF79F35202BE13B548DB975252B1BC92360
626FC20A06B1CD5E6FC25C1C0C2AA52EA74614BD65E3C60EE00B51C08A172D01
9019471A357C1B109EFC024214BC83907FCB4199F83391D18D106F4E83604B7B
5A2B7179B82FF7F5951CDECCEE8DBAFDBAB2CCAF33B871C11ECCDE402C82418B
60BA67EAB2936DE6837F5D3D6C03485D2529DCE4DD8C0390EDA45B0771B4FF67
3AB729D3E2C786D26128ED7E419E19143E3FDB93A525F884D7148EB7E977BB3E
BED18E6351587056324E27143D11B493832B79051A381B11E675D00DB561F7DC
2242EF1BFBD6ECD67C3E47D86DC710D79E7ABFCF0184546C67B5248B6AB45EF5
8B793412BE86F7CCE6849743F1731BDCE796A5041DCD7DF1FA2E761CDF14B7F9
05B52C3AE5FDFAC9E5F6A6873778C758CA9B396936D964877C989E2CADBD2ADE
7DE822422ABE7BFDAF5D55679F2877F71966154E53FB41493D98A7D6CFDC0143
7F919EEEB72CA681A8195EC2CC9A2D1191C2864C179A338> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
159.435 201.739 mo
(L\322)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
159.435 201.739 mo
(L\322) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
22.8652 424.609 mo
(\000W)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
22.8652 424.609 mo
(\000W) false chp
.68571 lw
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [15.75 0 0 -15.75 0 0 ]msf
34.9652 427.959 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [15.75 0 0 -15.75 0 0 ]msf
34.9652 427.959 mo
(\000\024) false chp
.45 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
43.0152 424.609 mo
(\034,)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
43.0152 424.609 mo
(\034,) false chp
.68571 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
67.0401 424.609 mo
(\010q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
67.0401 424.609 mo
(\010q) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
91.2352 424.609 mo
(\003\306)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
91.2352 424.609 mo
(\003\306) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
57 <001C60D8A8C9B7A73DB6A9998818A4C5D65962B46AB272063BA8CC30D130
5585B06C348B66B1CBEEA127> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
115.345 424.609 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
115.345 424.609 mo
(\0009) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
127.345 424.609 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
127.345 424.609 mo
(\0001) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
41 <001C60D8A8C9B7A73DB6E7A6EB78A5D438A57EF1259098C6839AE7302971
E0872536C306A623A4DFFF> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
139.345 424.609 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
139.345 424.609 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
151.345 424.609 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
151.345 424.609 mo
(\000\024) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
1137 <001C60D8A8C9B5EE310D95DD8C1D2C780ED6230165120F6965EACB5257
023E4B3AF47C40803066A91A8F44DB6A53AE67F871F7A1779B355D991B872270
2862A3FC6702EEC50BFBF215428972F2E2BCED4AC31CFF4B64864BB6AE572339
EACDE14AA2E67B8E825BF44DC3A00FF3C71BF998436A12DE8D7B5D26DA23B56B
AC1D740401F1629BA997C3A59B8E862E34C90A563E3B588980484948CAE93757
DF1272792D84ACBC1EC181357B9262BFD0EB6E35> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
163.745 424.609 mo
(\004q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
163.745 424.609 mo
(\004q) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
17937 <001C60D8A8C9B5EE31028E27DA1DC70148F7C7E2D0C3844CB44E4108D
84C33AEDF6B9A4B42F8892D83ED4463E48B9912F8DEB3E7BE96035F940F5C521
513DCA6F806AB551E71A272BF24D0889A7B20B946890707469F79FCF1D3BE73A
28E635B09423BC24CE8D8110DD66564747E872B94C999AC971035F28B170231C
BD6802FDAA1B9C00526CF7626AE14750D5BCC09B2BCFC7ADB2E088CDF2F5838D
BBA5A591BCA447D79E5184BB9F874C21BFFBDF3546FA75733FEC315BF82C3A8D
24A5A94E7FE5333FB89E47F2EA7AF93FF56C23D19F390B2BCC8C957213EF397A
CBE21E5D73C38B8D539322C17E427C0CF8EB0F8BAA3FFE8572ACE29856C1CE41
BAFEF61AE07F41F061EC35E04C27FCB44DC9A4C2695BEEC4DE978BA3F6053B21
F8595A474198D9575BAC68C4A17701D1371B62EEC5E6631F02EBEAB4FF9FDEC4
223BDC7A65D8E848B7F87801E5839864A8D67B594C29C358E2548ED78B7E6A6> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
33.0352 453.419 mo
(F\021)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
33.0352 453.419 mo
(F\021) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
12353 <001C60D8A8C9B5EE3100B613CEDC61E91BFC4D1950727BB15CF9A5883
FB418041DB0BBEF899889D124E889008F1F899B957DA76C6A5A3164830F33759
ABB32422989E10C02D4ED76EBF9B8B48A3E0A65AF99CF121055D61B6F8035AB9
0E1AFABF68370BB799B290C2E81699E504C2E80A3481C02461FCA123306BD21D
42B3C13EB7E545BF16ED0991ED79929053A4CE78641C3731D85645B12EE920D6
9BBC48C09384BA0371DB79427F7184954C4302DB562E0F22377A8372FE8958DE
5D8C809903B885AB9F8451CF73199BFA7C020A4B74D20B8FFB9932B0CA18CF43
A84A7482075F80A25D2F9C1323C3D3318FDA409BE6C48D7A3BB76F80E84C6DE0
DE07A4F44F2009BFC0BC16F872D1EC492646C9CA74A016C7AF264F09B4B59A57
A8A56623D9BD973B9E59AE3597F2D77E823298CC15F881D0F2B979543C0CAB3C
04B8F4C8847B1AB8F5FA18AC70F08A557BF617278F4BA127682C866A3F950D40
693D9B3DE20B37236383C9692AECF10A2A35EAA7733D07613A39C79> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
57.0352 453.419 mo
(0A)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
57.0352 453.419 mo
(0A) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
14520 <001C60D8A8C9B5EE3103DB25CBB6B46F0554393D3522808295FAE88BE
DF9BCA813C337E510BCA6A7DBC592D3002810D64C038342ACA540CB7B51E7D16
47E064BBCB15CCCF8C088166745F9B8DF0816043376140727BD2CA30323340EE
18A22A1C3FCA672840A282D872F41D4F8C51B6BB172CC13AA94C6C71061FD5E9
F1D616B51F1D8001FC1993C55C37D32F763505E57DBBB6CE1F5874A40161214B
982FB5C93D3509AB31EA4089DE78542094B941E06A13429003943355F2CE5A88
B9BB50AE32511A7D047109B5F1BC81F63FA0B194422AB8A4505838ECA5864A93
B270353> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
81.0352 453.419 mo
(8\270)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
81.0352 453.419 mo
(8\270) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
9967 <001C60D8A8C9B5EE3102AD24D64C452A691A9345CC0574397CFB73D549
5F24E32BF3FD4D6E4EE9274BA2D2E4FAA25D8CD41D9257A9AA86AF0233FB01E4
2F8E33938C6D24375B9B2BF7D743D6C19AF0C0B703973D5C9C5E154AB711EC17
5BB810975462D1686ED19A832F09F294A1D48532367A1AAB860918E812E2B2E9
DDB0A8DB4E356918F42E234A70510AE460243B2D69A43DD5146AE52AE9807903
36CAD69D01187C5F97F3B0CEDB0B01172DF1A9ED4A5B4E31810D722150107E1A
CEFF36572B877ADF92141409D7D4C243896AF04B730DE769031A50707F4E5204
721F4418B1B61D5384FD7FEAF74A49835543D7204E2B47D2> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
105.035 453.419 mo
(&\357)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
105.035 453.419 mo
(&\357) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
129.035 453.419 mo
(\033{)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
129.035 453.419 mo
(\033{) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
153.755 453.419 mo
(L\322)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
153.755 453.419 mo
(L\322) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
16.8652 637.289 mo
(\000W)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
16.8652 637.289 mo
(\000W) false chp
.68643 lw
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [15.75 0 0 -15.75 0 0 ]msf
28.9452 640.659 mo
(\000\025)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [15.75 0 0 -15.75 0 0 ]msf
28.9452 640.659 mo
(\000\025) false chp
.45 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
37.0152 637.289 mo
(\034,)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
37.0152 637.289 mo
(\034,) false chp
.68643 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
61.0402 637.289 mo
(\010q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
61.0402 637.289 mo
(\010q) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
85.2452 637.289 mo
(\003\306)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
85.2452 637.289 mo
(\003\306) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
109.345 637.289 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
109.345 637.289 mo
(\0009) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
121.345 637.289 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
121.345 637.289 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
133.345 637.289 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
133.345 637.289 mo
(\000\)) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
145.645 637.289 mo
(\004q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
145.645 637.289 mo
(\004q) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
169.645 637.289 mo
(F\021)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
169.645 637.289 mo
(F\021) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
45.0952 666.119 mo
(0A)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
45.0952 666.119 mo
(0A) false chp
.68571 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
69.0952 666.119 mo
(8\270)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
69.0952 666.119 mo
(8\270) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
93.0952 666.119 mo
(&\357)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
93.0952 666.119 mo
(&\357) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
1572 <001C60D8A8C9B5EE3103E3FBEDF54C1406B25B2EF49C7324EAB80DE9A0
BF0A805CEEB8E4758E84C74E3C1ADE5ADF92F40AAEC896A8439B794A3E71B807
5BAB73DE06CAED0AE46C86F20DD0B7B8225B59CDE3210E8820DBD9DE4004C12D
48357EC5D31A5C19C4B0D48A05F5173063BC1BAFD31CCD8F502A4D2577C3D8B4
6EAA23B63FDE9B75D9C25176433CA45BF90154FF258E0C8D4258F5A8A4C8ADB9
289E6DFD2D18598232919051BBEB23DE97993FB9A80B9AE28C61B19F795FABD3
2B7F3F3373A56F9C4A0A63001013074DBBA9361EE29F0796AF42D2268CF7A0EF
057734385AB579FF30FA3EE6096D658F6636F2287170D514435050380437413A
134CCD89F122D601671F313D1ED7A34B7E87CD0C4EDDB5619F011B1A30CBDDF1
4D07F5513736A204C72B0EC3619325460C56F1956D863DC54A3898B15C0F013C
C438EE117B5522F4C2CFB2678E6A1540990EB324C4D1FEFC655FDDE1F825CD15
1218C9675C9D4B5A539A185866FAA28C75D77B767CCFEBD7A0D45A959A6FD054
679AF208F7AE03AE43E6238F> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
117.095 666.119 mo
(\006$)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
117.095 666.119 mo
(\006$) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
3907 <001C60D8A8C9B5EE310DF80E7E484284D1933683B87B5621A1318FACB9
E7D09556185018F4EAF8D7E6C2DEC4D05D40B04610FE3E96B104487E10A621F1
DE34F5DE6A659697958AA86C5911B6ADF08AD161383A770D770D9F7D4884BDBB
2FA66F005B2DCF821FBFF8AA8C025C44A2533C45988D6A22A8A291CC600A170B
DC19B5FFB343EC6892E6ACA923BD6FE34918096B7932701386496B64DD8B646D
DDDC8E329F92F79E1CFB293F2DF2B164B586F95C65E5218240D8006E306AD906
E039F0D600889307B9D241B803941A88E4F8A855CF541606952D35BF66401DB9
A9869A94672C5DD5E9C8279CDDA6C53BFBD19DF96188609BB5A17233D82BB4E8
11DDCB88B1C7893257B88D76CBFCA1A13392F57039D3EA2D10C4113284DAF865
4A5DE4914CB6A53131B3BF60ABCC5DC295CDD193ABCB19806B4E> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
141.095 666.119 mo
(\017C)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
141.095 666.119 mo
(\017C) false chp
@
1 lw
1 lc
1 lj
469.075 133.559 mo
582.465 85.4888 li
.75259 .511162 0 0 cmyk
@
683.195 133.559 mo
582.465 85.4888 li
@
459.915 133.559 mo
459.915 128.499 464.015 124.399 469.075 124.399 cv
474.135 124.399 478.235 128.499 478.235 133.559 cv
478.235 138.619 474.135 142.729 469.075 142.729 cv
464.015 142.729 459.915 138.619 459.915 133.559 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
459.915 133.559 mo
459.915 128.499 464.015 124.399 469.075 124.399 cv
474.135 124.399 478.235 128.499 478.235 133.559 cv
478.235 138.619 474.135 142.729 469.075 142.729 cv
464.015 142.729 459.915 138.619 459.915 133.559 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
674.035 133.559 mo
674.035 128.499 678.135 124.399 683.195 124.399 cv
688.255 124.399 692.355 128.499 692.355 133.559 cv
692.355 138.619 688.255 142.729 683.195 142.729 cv
678.135 142.729 674.035 138.619 674.035 133.559 cv
cp
.695583 .0949111 0 0 cmyk
ef
674.035 133.559 mo
674.035 128.499 678.135 124.399 683.195 124.399 cv
688.255 124.399 692.355 128.499 692.355 133.559 cv
692.355 138.619 688.255 142.729 683.195 142.729 cv
678.135 142.729 674.035 138.619 674.035 133.559 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
573.305 85.4888 mo
573.305 80.4287 577.405 76.3287 582.465 76.3287 cv
587.525 76.3287 591.625 80.4287 591.625 85.4888 cv
591.625 90.5487 587.525 94.6587 582.465 94.6587 cv
577.405 94.6587 573.305 90.5487 573.305 85.4888 cv
cp
.695583 .0949111 0 0 cmyk
ef
573.305 85.4888 mo
573.305 80.4287 577.405 76.3287 582.465 76.3287 cv
587.525 76.3287 591.625 80.4287 591.625 85.4888 cv
591.625 90.5487 587.525 94.6587 582.465 94.6587 cv
577.405 94.6587 573.305 90.5487 573.305 85.4888 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
775.155 237.939 mo
775.155 232.879 779.255 228.769 784.315 228.769 cv
789.375 228.769 793.475 232.879 793.475 237.939 cv
793.475 242.989 789.375 247.099 784.315 247.099 cv
779.255 247.099 775.155 242.989 775.155 237.939 cv
cp
.751797 0 .870695 0 cmyk
ef
775.155 237.939 mo
775.155 232.879 779.255 228.769 784.315 228.769 cv
789.375 228.769 793.475 232.879 793.475 237.939 cv
793.475 242.989 789.375 247.099 784.315 247.099 cv
779.255 247.099 775.155 242.989 775.155 237.939 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
815.035 195.299 mo
815.305 237.939 li
.75259 .511162 0 0 cmyk
@
805.875 195.299 mo
805.875 190.239 809.975 186.139 815.035 186.139 cv
820.095 186.139 824.205 190.239 824.205 195.299 cv
824.205 200.359 820.095 204.459 815.035 204.459 cv
809.975 204.459 805.875 200.359 805.875 195.299 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
805.875 195.299 mo
805.875 190.239 809.975 186.139 815.035 186.139 cv
820.095 186.139 824.205 190.239 824.205 195.299 cv
824.205 200.359 820.095 204.459 815.035 204.459 cv
809.975 204.459 805.875 200.359 805.875 195.299 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
806.145 237.939 mo
806.145 232.879 810.245 228.769 815.305 228.769 cv
820.365 228.769 824.465 232.879 824.465 237.939 cv
824.465 242.989 820.365 247.099 815.305 247.099 cv
810.245 247.099 806.145 242.989 806.145 237.939 cv
cp
.751797 0 .870695 0 cmyk
ef
806.145 237.939 mo
806.145 232.879 810.245 228.769 815.305 228.769 cv
820.365 228.769 824.465 232.879 824.465 237.939 cv
824.465 242.989 820.365 247.099 815.305 247.099 cv
810.245 247.099 806.145 242.989 806.145 237.939 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
362.775 230.469 mo
398.975 191.689 li
.75259 .511162 0 0 cmyk
@
391.465 231.339 mo
398.975 191.689 li
@
470.495 231.339 mo
398.975 191.689 li
@
353.615 230.469 mo
353.615 225.409 357.715 221.309 362.775 221.309 cv
367.835 221.309 371.945 225.409 371.945 230.469 cv
371.945 235.529 367.835 239.629 362.775 239.629 cv
357.715 239.629 353.615 235.529 353.615 230.469 cv
cp
1 /0 /CSD get_res sepcs
.251 sep
ef
.25 lw
2 lc
0 lj
353.615 230.469 mo
353.615 225.409 357.715 221.309 362.775 221.309 cv
367.835 221.309 371.945 225.409 371.945 230.469 cv
371.945 235.529 367.835 239.629 362.775 239.629 cv
357.715 239.629 353.615 235.529 353.615 230.469 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
382.305 231.339 mo
382.305 226.279 386.405 222.179 391.465 222.179 cv
396.525 222.179 400.625 226.279 400.625 231.339 cv
400.625 236.399 396.525 240.499 391.465 240.499 cv
386.405 240.499 382.305 236.399 382.305 231.339 cv
cp
.751797 0 .870695 0 cmyk
ef
382.305 231.339 mo
382.305 226.279 386.405 222.179 391.465 222.179 cv
396.525 222.179 400.625 226.279 400.625 231.339 cv
400.625 236.399 396.525 240.499 391.465 240.499 cv
386.405 240.499 382.305 236.399 382.305 231.339 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
389.815 191.689 mo
389.815 186.629 393.915 182.529 398.975 182.529 cv
404.035 182.529 408.135 186.629 408.135 191.689 cv
408.135 196.749 404.035 200.849 398.975 200.849 cv
393.915 200.849 389.815 196.749 389.815 191.689 cv
cp
.695583 .0949111 0 0 cmyk
ef
389.815 191.689 mo
389.815 186.629 393.915 182.529 398.975 182.529 cv
404.035 182.529 408.135 186.629 408.135 191.689 cv
408.135 196.749 404.035 200.849 398.975 200.849 cv
393.915 200.849 389.815 196.749 389.815 191.689 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
461.335 231.339 mo
461.335 226.279 465.435 222.179 470.495 222.179 cv
475.555 222.179 479.655 226.279 479.655 231.339 cv
479.655 236.399 475.555 240.499 470.495 240.499 cv
465.435 240.499 461.335 236.399 461.335 231.339 cv
cp
.549523 0 .150759 0 cmyk
ef
461.335 231.339 mo
461.335 226.279 465.435 222.179 470.495 222.179 cv
475.555 222.179 479.655 226.279 479.655 231.339 cv
479.655 236.399 475.555 240.499 470.495 240.499 cv
465.435 240.499 461.335 236.399 461.335 231.339 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
[4 2 ] 0 dsh
499.605 214.349 mo
499.605 190.089 462.795 170.409 417.395 170.409 cv
371.995 170.409 335.195 190.089 335.195 214.349 cv
335.195 238.619 371.995 258.289 417.395 258.289 cv
462.795 258.289 499.605 238.619 499.605 214.349 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
369.515 267.159 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
369.515 267.159 mo
(\0009) false chp
.68571 lw
[] 0 dsh
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
381.515 267.159 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
381.515 267.159 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
393.515 267.159 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
393.515 267.159 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
405.515 267.159 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
405.515 267.159 mo
(\000\024) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
417.915 267.159 mo
(\004q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
417.915 267.159 mo
(\004q) false chp
@
.75259 .511162 0 0 cmyk
%ADOBeginSubsetFont: KKFUDU+SimHei-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (KKFUDU+SimHei-GBK-EUC-H)
%%Title: (KKFUDU+SimHei-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /KKFUDU+SimHei-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-12 -156 996 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28562 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE310300013909A50A2AB7EE3C36B6EFE4BFA05B0B1D6F8
CE08BF0CAB16ED4> |
266 <001C60D8A8C9B5EE311311E17F5431E6A8D3A7AE5014E99B891F5B439BF
C2FDE96AFEFECC3B6D2BB8F029F76BEE3CA40B3F0B77A5143> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /KKFUDU+SimHei-GBK-EUC-H-Identity-H /Identity-H 0 [/KKFUDU+SimHei-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/KKFUDU+SimHei-GBK-EUC-H-Identity-H findfont [30 0 0 -30 0 0 ]msf
400.365 242.489 mo
(\001\012\001\012)
[30 0 ]xsh
1 lw
1 lc
1 lj
544.195 230.469 mo
580.385 191.689 li
@
572.885 231.339 mo
580.385 191.689 li
@
651.915 231.339 mo
580.385 191.689 li
@
535.035 230.469 mo
535.035 225.409 539.135 221.309 544.195 221.309 cv
549.255 221.309 553.355 225.409 553.355 230.469 cv
553.355 235.529 549.255 239.629 544.195 239.629 cv
539.135 239.629 535.035 235.529 535.035 230.469 cv
cp
1 /0 /CSD get_res sepcs
.251 sep
ef
.25 lw
2 lc
0 lj
535.035 230.469 mo
535.035 225.409 539.135 221.309 544.195 221.309 cv
549.255 221.309 553.355 225.409 553.355 230.469 cv
553.355 235.529 549.255 239.629 544.195 239.629 cv
539.135 239.629 535.035 235.529 535.035 230.469 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
563.725 231.339 mo
563.725 226.279 567.825 222.179 572.885 222.179 cv
577.945 222.179 582.045 226.279 582.045 231.339 cv
582.045 236.399 577.945 240.499 572.885 240.499 cv
567.825 240.499 563.725 236.399 563.725 231.339 cv
cp
.751797 0 .870695 0 cmyk
ef
563.725 231.339 mo
563.725 226.279 567.825 222.179 572.885 222.179 cv
577.945 222.179 582.045 226.279 582.045 231.339 cv
582.045 236.399 577.945 240.499 572.885 240.499 cv
567.825 240.499 563.725 236.399 563.725 231.339 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
571.225 191.689 mo
571.225 186.629 575.325 182.529 580.385 182.529 cv
585.445 182.529 589.555 186.629 589.555 191.689 cv
589.555 196.749 585.445 200.849 580.385 200.849 cv
575.325 200.849 571.225 196.749 571.225 191.689 cv
cp
.695583 .0949111 0 0 cmyk
ef
571.225 191.689 mo
571.225 186.629 575.325 182.529 580.385 182.529 cv
585.445 182.529 589.555 186.629 589.555 191.689 cv
589.555 196.749 585.445 200.849 580.385 200.849 cv
575.325 200.849 571.225 196.749 571.225 191.689 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
642.755 231.339 mo
642.755 226.279 646.855 222.179 651.915 222.179 cv
656.975 222.179 661.075 226.279 661.075 231.339 cv
661.075 236.399 656.975 240.499 651.915 240.499 cv
646.855 240.499 642.755 236.399 642.755 231.339 cv
cp
.549523 0 .150759 0 cmyk
ef
642.755 231.339 mo
642.755 226.279 646.855 222.179 651.915 222.179 cv
656.975 222.179 661.075 226.279 661.075 231.339 cv
661.075 236.399 656.975 240.499 651.915 240.499 cv
646.855 240.499 642.755 236.399 642.755 231.339 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
[4 2 ] 0 dsh
681.015 214.349 mo
681.015 190.089 644.215 170.409 598.815 170.409 cv
553.415 170.409 516.605 190.089 516.605 214.349 cv
516.605 238.619 553.415 258.289 598.815 258.289 cv
644.215 258.289 681.015 238.619 681.015 214.349 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
551.015 267.159 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
551.015 267.159 mo
(\0009) false chp
.68571 lw
[] 0 dsh
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
563.015 267.159 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
563.015 267.159 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
575.015 267.159 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
575.015 267.159 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
587.015 267.159 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
587.015 267.159 mo
(\000\024) false chp
@
%ADOBeginSubsetFont: KKFUDT+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDT+SimHei-GBK-EUC-H 1 GetGlyphDirectory
3901 <001C60D8A8C9B5EE31034E2A0A6562A51D3C350DC7BCC96598BDF07F67
EEA34B7EB07FA2C9DE5B223B9EEEB1DB8EBCD1E5301EDD727648EFFF16258FFE
81AA369EF60BF63D567DA3DCF485ECBD0C579D1EB0F8FAD693FD5940914678FB
368B2ED7EC12033EC69EAC75C41976C2E29288D0B0CF2C9EB62B2A885863C70C
932337AA0D01D38A08C4FB05AD40547958DD1DC708CC2ED9A8B49BC4DD388FF2
943E953470EADE9BD932BDBAAD5C057AA12AAA195BFDD0846CEDA556C67D451A
2BBAC6A07A71C6A766B6B1931DE32A3E5CC5C4C453B4F6BD3FF02BA289B95329
7069EE594F6A680E0372EA052C038B45747F2A1E355A994654153E1F0C89DD09
C2E1094B79281D85C5F3B52BBAAA1063> |
!
end
end end
%ADOEndSubsetFont
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
599.415 267.159 mo
(\017=)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
599.415 267.159 mo
(\017=) false chp
@
.75259 .511162 0 0 cmyk
/KKFUDU+SimHei-GBK-EUC-H-Identity-H findfont [30 0 0 -30 0 0 ]msf
581.865 242.489 mo
(\001\012\001\012)
[30 0 ]xsh
1 /0 /CSD get_res sepcs
.9529 sep
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
435.665 163.709 mo
(\000\()sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
435.665 163.709 mo
(\000\() false chp
.68643 lw
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
50 <001C60D8A8C9B7A73DB6922CF4E5EACB1ED2FE385232FF7BF0E530133CB9
3671AA7973A3A411EA944E44044CEAF5A1F79ED3B673B0B814FCAB7895EA2693
8B23ED17B72E42169D03863504FE9AC4B983167EC4F689EB8BAC097A6B229B78
7BADFD4D44B0DBA02884E6F9917186B041831AA2AE758E1EA1EC1A2AC872C167
C760A7A47FB7B597E80C65B8E944B6> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
447.678 163.709 mo
(\0002)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
447.678 163.709 mo
(\0002) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
53 <001C60D8A8C9B7A73DB9F1C97022C12EB7DCDA9C3ADFB97505BB02EE9230
1B39E5CCF6EC45B9C8B451BF9660AA4A3214E77FBE70A2ADA890B617909D4CA2
04755567F1A117499DFF61ACC138BC13458167099F9D4005C207A02AB817FD88
EB997EC3E3262CC6320C3470> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
459.69 163.709 mo
(\0005)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
459.69 163.709 mo
(\0005) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
18 <001C60D8A8C9B7A73DB6F8ED5DD2705614B53A30D0758F246011D25D90> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
471.703 163.709 mo
(\000\022)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
471.703 163.709 mo
(\000\022) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
55 <001C60D8A8C9B7A73DB6EB6131D3D57E8428A01E0E26EA29B8954D6DC489
1F87A415F1> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
484.484 163.709 mo
(\0007)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
484.484 163.709 mo
(\0007) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
496.496 163.709 mo
(\0002)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
496.496 163.709 mo
(\0002) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
508.509 163.709 mo
(\0005)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
508.509 163.709 mo
(\0005) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
304.815 201.889 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
304.815 201.889 mo
(\0009) false chp
.68571 lw
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
86 <001C60D8A8C9B7A73DB6A5D1FE1DAD6500A89AADD325FAB4072430F80F09
6CB00F0AFB3E4F72229F4A5EC84F047A170E90E9D6E9990EF145252187E067D1
A028576C7671DFB141C65CDA12D63853EE80B461AF20265158378226353096A2
B203154A4AC52A19B9BE5C36A918E051C9A82EF013547198AE670679777A3A81
780C09DE5B722C1F98099714A21D960DFEC6635F03A0621A87AC19B8DC198A64
A87AEFC990FA3F03C0D1D3759A7B188269CC9F30214322193823ED1BB761> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
316.815 201.889 mo
(\000V)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
316.815 201.889 mo
(\000V) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
328.815 201.889 mo
(\000\022)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
328.815 201.889 mo
(\000\022) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
47 <001C60D8A8C9B7A73DB6E3CF41DBB07EAA1119A9A252F49C64745FD6E9> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
340.815 201.889 mo
(\000/)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
340.815 201.889 mo
(\000/) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
69 <001C60D8A8C9B7A73DB6AD62F258BD2008B282A0D73BF7C83A0DA5424EBE
D69698EE51B8E376F7B380B41BC79F2461EF9F5011C93E5CB502D5127D7E4895
BE9205F970DF5907E76E53758E4E7D2E1DF8179D9EEA44863A3DA863F9254B5C
AAEF76CFA789DFB7920D18AC14EE4AE31BE5C50E10D0083D02A16BDE6CC278E2
A41619746FFE229686A140247BF7705C6F2AE6> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
353.535 201.889 mo
(\000E)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
353.535 201.889 mo
(\000E) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
300.265 237.989 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
300.265 237.989 mo
(\0009) false chp
@
%ADOBeginSubsetFont: KKFUDS+SimHei-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/KKFUDS+SimHei-GBK-EUC-H 1 GetGlyphDirectory
48 <001C60D8A8C9B7A73DB6E7A6EB78A2825668BB22E6DF262F7C9DC8DECBA6
87D9A018A6324A4FAFCFF1BB20B2A5040ADFF6C0050C8C528F7BFC901A> |
!
end
end end
%ADOEndSubsetFont
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
312.265 237.989 mo
(\0000)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
312.265 237.989 mo
(\0000) false chp
@
1 lw
1 lc
1 lj
480.845 69.8888 mo
499.455 79.1687 517.775 70.3387 540.505 74.0587 cv
547.515 75.2087 554.945 77.5487 557.505 79.7388 cv
563.055 84.4688 545.915 88.4888 530.865 92.4788 cv
488.445 103.739 462.605 114.859 432.185 132.969 cv
414.555 143.469 395.385 156.319 386.255 173.199 cv
379.735 185.249 378.325 199.349 377.725 217.139 cv
377.385 227.439 377.315 238.979 380.545 244.069 cv
385.965 252.579 400.655 242.989 408.905 231.319 cv
416.155 221.069 418.415 209.209 423.085 198.729 cv
428.295 187.049 436.505 177.079 446.345 168.979 cv
471.965 147.919 508.735 139.569 542.745 124.519 cv
577.325 109.219 609.045 86.9988 635.075 73.9988 cv
0 .9617 .904814 0 cmyk
@
632.785 71.1787 mo
643.835 69.8888 li
635.765 77.5587 li
632.785 71.1787 li
cp
ef
400.225 410.649 mo
469.075 354.529 li
.75259 .511162 0 0 cmyk
@
400.225 410.649 mo
683.195 354.529 li
@
.25 lw
2 lc
0 lj
2 ml
[4 2 ] 0 dsh
845.425 435.319 mo
845.425 411.049 814.045 391.379 775.335 391.379 cv
736.625 391.379 705.245 411.049 705.245 435.319 cv
705.245 459.589 736.625 479.259 775.335 479.259 cv
814.045 479.259 845.425 459.589 845.425 435.319 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
784.315 416.269 mo
784.315 458.899 li
.75259 .511162 0 0 cmyk
@
748.695 455.919 mo
749.185 416.269 li
@
739.535 455.919 mo
739.535 450.859 743.635 446.759 748.695 446.759 cv
753.755 446.759 757.855 450.859 757.855 455.919 cv
757.855 460.979 753.755 465.079 748.695 465.079 cv
743.635 465.079 739.535 460.979 739.535 455.919 cv
cp
.751797 0 .870695 0 cmyk
ef
.25 lw
2 lc
0 lj
2 ml
739.535 455.919 mo
739.535 450.859 743.635 446.759 748.695 446.759 cv
753.755 446.759 757.855 450.859 757.855 455.919 cv
757.855 460.979 753.755 465.079 748.695 465.079 cv
743.635 465.079 739.535 460.979 739.535 455.919 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
580.385 412.659 mo
469.075 354.529 li
.75259 .511162 0 0 cmyk
@
580.385 412.659 mo
683.195 354.529 li
@
749.185 416.269 mo
469.075 354.529 li
@
749.185 416.269 mo
683.195 354.529 li
@
683.195 354.529 mo
784.315 416.269 li
@
469.075 354.529 mo
784.315 416.269 li
@
683.195 354.529 mo
815.035 416.269 li
@
469.075 354.529 mo
815.035 416.269 li
@
775.155 416.269 mo
775.155 411.209 779.255 407.109 784.315 407.109 cv
789.375 407.109 793.475 411.209 793.475 416.269 cv
793.475 421.329 789.375 425.429 784.315 425.429 cv
779.255 425.429 775.155 421.329 775.155 416.269 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
775.155 416.269 mo
775.155 411.209 779.255 407.109 784.315 407.109 cv
789.375 407.109 793.475 411.209 793.475 416.269 cv
793.475 421.329 789.375 425.429 784.315 425.429 cv
779.255 425.429 775.155 421.329 775.155 416.269 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
740.025 416.269 mo
740.025 411.209 744.125 407.109 749.185 407.109 cv
754.245 407.109 758.345 411.209 758.345 416.269 cv
758.345 421.329 754.245 425.429 749.185 425.429 cv
744.125 425.429 740.025 421.329 740.025 416.269 cv
cp
.695583 .0949111 0 0 cmyk
ef
740.025 416.269 mo
740.025 411.209 744.125 407.109 749.185 407.109 cv
754.245 407.109 758.345 411.209 758.345 416.269 cv
758.345 421.329 754.245 425.429 749.185 425.429 cv
744.125 425.429 740.025 421.329 740.025 416.269 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
.9529 sep
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
774.465 390.339 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
774.465 390.339 mo
(\0001) false chp
.68571 lw
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
786.465 390.339 mo
(\000&)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
786.465 390.339 mo
(\000&) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
798.465 390.339 mo
(\000\()sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
798.465 390.339 mo
(\000\() false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
558.815 334.539 mo
(\000')sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
558.815 334.539 mo
(\000') false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
570.84 334.539 mo
(\000&)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
570.84 334.539 mo
(\000&) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
582.865 334.539 mo
(\000*)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
582.865 334.539 mo
(\000*) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
594.89 334.539 mo
(\000:)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
594.89 334.539 mo
(\000:) false chp
@
358.365 309.179 mo
468.925 309.179 li
475.465 309.179 480.765 303.879 480.765 297.339 cv
480.765 284.379 li
480.765 277.839 475.465 272.539 468.925 272.539 cv
358.365 272.539 li
351.835 272.539 346.535 277.839 346.535 284.379 cv
346.535 297.339 li
346.535 303.879 351.835 309.179 358.365 309.179 cv
cp
.75259 .511162 0 0 cmyk
ef
.25 lw
358.365 309.179 mo
468.925 309.179 li
475.465 309.179 480.765 303.879 480.765 297.339 cv
480.765 284.379 li
480.765 277.839 475.465 272.539 468.925 272.539 cv
358.365 272.539 li
351.835 272.539 346.535 277.839 346.535 284.379 cv
346.535 297.339 li
346.535 303.879 351.835 309.179 358.365 309.179 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
0 sep
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
359.865 298.389 mo
(\004P)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
359.865 298.389 mo
(\004P) false chp
.68643 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
383.89 298.389 mo
(\010\327)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
383.89 298.389 mo
(\010\327) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
407.915 298.389 mo
(4\376)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
407.915 298.389 mo
(4\376) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
431.94 298.389 mo
(1%)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
431.94 298.389 mo
(1%) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
456.285 298.389 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
456.285 298.389 mo
(\000\024) false chp
@
657.545 309.099 mo
786.285 309.099 li
793.905 309.099 800.075 302.929 800.075 295.309 cv
800.075 286.249 li
800.075 278.629 793.905 272.459 786.285 272.459 cv
657.545 272.459 li
649.925 272.459 643.755 278.629 643.755 286.249 cv
643.755 295.309 li
643.755 302.929 649.925 309.099 657.545 309.099 cv
cp
.75259 .511162 0 0 cmyk
ef
.25 lw
657.545 309.099 mo
786.285 309.099 li
793.905 309.099 800.075 302.929 800.075 295.309 cv
800.075 286.249 li
800.075 278.629 793.905 272.459 786.285 272.459 cv
657.545 272.459 li
649.925 272.459 643.755 278.629 643.755 286.249 cv
643.755 295.309 li
643.755 302.929 649.925 309.099 657.545 309.099 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
0 sep
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
668.265 298.309 mo
(\004P)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
668.265 298.309 mo
(\004P) false chp
.68643 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
692.29 298.309 mo
(\010\327)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
692.29 298.309 mo
(\010\327) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
716.315 298.309 mo
(4\376)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
716.315 298.309 mo
(4\376) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
740.34 298.309 mo
(1%)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
740.34 298.309 mo
(1%) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
764.685 298.309 mo
(\000\025)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
764.685 298.309 mo
(\000\025) false chp
@
1 lw
1 lc
1 lj
469.075 354.529 mo
582.465 306.459 li
.75259 .511162 0 0 cmyk
@
683.195 354.529 mo
582.465 306.459 li
@
459.915 354.529 mo
459.915 349.469 464.015 345.369 469.075 345.369 cv
474.135 345.369 478.235 349.469 478.235 354.529 cv
478.235 359.589 474.135 363.689 469.075 363.689 cv
464.015 363.689 459.915 359.589 459.915 354.529 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
459.915 354.529 mo
459.915 349.469 464.015 345.369 469.075 345.369 cv
474.135 345.369 478.235 349.469 478.235 354.529 cv
478.235 359.589 474.135 363.689 469.075 363.689 cv
464.015 363.689 459.915 359.589 459.915 354.529 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
674.035 354.529 mo
674.035 349.469 678.135 345.369 683.195 345.369 cv
688.255 345.369 692.355 349.469 692.355 354.529 cv
692.355 359.589 688.255 363.689 683.195 363.689 cv
678.135 363.689 674.035 359.589 674.035 354.529 cv
cp
.695583 .0949111 0 0 cmyk
ef
674.035 354.529 mo
674.035 349.469 678.135 345.369 683.195 345.369 cv
688.255 345.369 692.355 349.469 692.355 354.529 cv
692.355 359.589 688.255 363.689 683.195 363.689 cv
678.135 363.689 674.035 359.589 674.035 354.529 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
573.305 306.459 mo
573.305 301.399 577.405 297.299 582.465 297.299 cv
587.525 297.299 591.625 301.399 591.625 306.459 cv
591.625 311.519 587.525 315.619 582.465 315.619 cv
577.405 315.619 573.305 311.519 573.305 306.459 cv
cp
.695583 .0949111 0 0 cmyk
ef
573.305 306.459 mo
573.305 301.399 577.405 297.299 582.465 297.299 cv
587.525 297.299 591.625 301.399 591.625 306.459 cv
591.625 311.519 587.525 315.619 582.465 315.619 cv
577.405 315.619 573.305 311.519 573.305 306.459 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
775.155 458.899 mo
775.155 453.839 779.255 449.739 784.315 449.739 cv
789.375 449.739 793.475 453.839 793.475 458.899 cv
793.475 463.959 789.375 468.069 784.315 468.069 cv
779.255 468.069 775.155 463.959 775.155 458.899 cv
cp
.751797 0 .870695 0 cmyk
ef
775.155 458.899 mo
775.155 453.839 779.255 449.739 784.315 449.739 cv
789.375 449.739 793.475 453.839 793.475 458.899 cv
793.475 463.959 789.375 468.069 784.315 468.069 cv
779.255 468.069 775.155 463.959 775.155 458.899 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
815.035 416.269 mo
815.305 458.899 li
.75259 .511162 0 0 cmyk
@
805.875 416.269 mo
805.875 411.209 809.975 407.109 815.035 407.109 cv
820.095 407.109 824.205 411.209 824.205 416.269 cv
824.205 421.329 820.095 425.429 815.035 425.429 cv
809.975 425.429 805.875 421.329 805.875 416.269 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
805.875 416.269 mo
805.875 411.209 809.975 407.109 815.035 407.109 cv
820.095 407.109 824.205 411.209 824.205 416.269 cv
824.205 421.329 820.095 425.429 815.035 425.429 cv
809.975 425.429 805.875 421.329 805.875 416.269 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
806.145 458.899 mo
806.145 453.839 810.245 449.739 815.305 449.739 cv
820.365 449.739 824.465 453.839 824.465 458.899 cv
824.465 463.959 820.365 468.069 815.305 468.069 cv
810.245 468.069 806.145 463.959 806.145 458.899 cv
cp
.751797 0 .870695 0 cmyk
ef
806.145 458.899 mo
806.145 453.839 810.245 449.739 815.305 449.739 cv
820.365 449.739 824.465 453.839 824.465 458.899 cv
824.465 463.959 820.365 468.069 815.305 468.069 cv
810.245 468.069 806.145 463.959 806.145 458.899 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
362.775 451.439 mo
398.975 412.659 li
.75259 .511162 0 0 cmyk
@
391.465 452.309 mo
398.975 412.659 li
@
470.495 452.309 mo
398.975 412.659 li
@
353.615 451.439 mo
353.615 446.379 357.715 442.269 362.775 442.269 cv
367.835 442.269 371.945 446.379 371.945 451.439 cv
371.945 456.499 367.835 460.599 362.775 460.599 cv
357.715 460.599 353.615 456.499 353.615 451.439 cv
cp
1 /0 /CSD get_res sepcs
.251 sep
ef
.25 lw
2 lc
0 lj
353.615 451.439 mo
353.615 446.379 357.715 442.269 362.775 442.269 cv
367.835 442.269 371.945 446.379 371.945 451.439 cv
371.945 456.499 367.835 460.599 362.775 460.599 cv
357.715 460.599 353.615 456.499 353.615 451.439 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
382.305 452.309 mo
382.305 447.249 386.405 443.149 391.465 443.149 cv
396.525 443.149 400.625 447.249 400.625 452.309 cv
400.625 457.369 396.525 461.469 391.465 461.469 cv
386.405 461.469 382.305 457.369 382.305 452.309 cv
cp
0 .9617 .904814 0 cmyk
ef
382.305 452.309 mo
382.305 447.249 386.405 443.149 391.465 443.149 cv
396.525 443.149 400.625 447.249 400.625 452.309 cv
400.625 457.369 396.525 461.469 391.465 461.469 cv
386.405 461.469 382.305 457.369 382.305 452.309 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
389.815 412.659 mo
389.815 407.599 393.915 403.499 398.975 403.499 cv
404.035 403.499 408.135 407.599 408.135 412.659 cv
408.135 417.719 404.035 421.819 398.975 421.819 cv
393.915 421.819 389.815 417.719 389.815 412.659 cv
cp
.695583 .0949111 0 0 cmyk
ef
389.815 412.659 mo
389.815 407.599 393.915 403.499 398.975 403.499 cv
404.035 403.499 408.135 407.599 408.135 412.659 cv
408.135 417.719 404.035 421.819 398.975 421.819 cv
393.915 421.819 389.815 417.719 389.815 412.659 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
461.335 452.309 mo
461.335 447.249 465.435 443.149 470.495 443.149 cv
475.555 443.149 479.655 447.249 479.655 452.309 cv
479.655 457.369 475.555 461.469 470.495 461.469 cv
465.435 461.469 461.335 457.369 461.335 452.309 cv
cp
.549523 0 .150759 0 cmyk
ef
461.335 452.309 mo
461.335 447.249 465.435 443.149 470.495 443.149 cv
475.555 443.149 479.655 447.249 479.655 452.309 cv
479.655 457.369 475.555 461.469 470.495 461.469 cv
465.435 461.469 461.335 457.369 461.335 452.309 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
[4 2 ] 0 dsh
499.605 435.319 mo
499.605 411.049 462.795 391.379 417.395 391.379 cv
371.995 391.379 335.195 411.049 335.195 435.319 cv
335.195 459.589 371.995 479.259 417.395 479.259 cv
462.795 479.259 499.605 459.589 499.605 435.319 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
369.515 488.209 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
369.515 488.209 mo
(\0009) false chp
.68643 lw
[] 0 dsh
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
381.515 488.209 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
381.515 488.209 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
393.515 488.209 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
393.515 488.209 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
405.515 488.209 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
405.515 488.209 mo
(\000\024) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
417.915 488.209 mo
(\017=)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
417.915 488.209 mo
(\017=) false chp
@
.75259 .511162 0 0 cmyk
/KKFUDU+SimHei-GBK-EUC-H-Identity-H findfont [30.025 0 0 -30.025 0 0 ]msf
400.365 463.539 mo
(\001\012\001\012)
[29.9998 0 ]xsh
1 lw
1 lc
1 lj
544.195 451.439 mo
580.385 412.659 li
@
572.885 452.309 mo
580.385 412.659 li
@
651.915 452.309 mo
580.385 412.659 li
@
535.035 451.439 mo
535.035 446.379 539.135 442.269 544.195 442.269 cv
549.255 442.269 553.355 446.379 553.355 451.439 cv
553.355 456.499 549.255 460.599 544.195 460.599 cv
539.135 460.599 535.035 456.499 535.035 451.439 cv
cp
1 /0 /CSD get_res sepcs
.251 sep
ef
.25 lw
2 lc
0 lj
535.035 451.439 mo
535.035 446.379 539.135 442.269 544.195 442.269 cv
549.255 442.269 553.355 446.379 553.355 451.439 cv
553.355 456.499 549.255 460.599 544.195 460.599 cv
539.135 460.599 535.035 456.499 535.035 451.439 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
563.725 452.309 mo
563.725 447.249 567.825 443.149 572.885 443.149 cv
577.945 443.149 582.045 447.249 582.045 452.309 cv
582.045 457.369 577.945 461.469 572.885 461.469 cv
567.825 461.469 563.725 457.369 563.725 452.309 cv
cp
.751797 0 .870695 0 cmyk
ef
563.725 452.309 mo
563.725 447.249 567.825 443.149 572.885 443.149 cv
577.945 443.149 582.045 447.249 582.045 452.309 cv
582.045 457.369 577.945 461.469 572.885 461.469 cv
567.825 461.469 563.725 457.369 563.725 452.309 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
571.225 412.659 mo
571.225 407.599 575.325 403.499 580.385 403.499 cv
585.445 403.499 589.555 407.599 589.555 412.659 cv
589.555 417.719 585.445 421.819 580.385 421.819 cv
575.325 421.819 571.225 417.719 571.225 412.659 cv
cp
.695583 .0949111 0 0 cmyk
ef
571.225 412.659 mo
571.225 407.599 575.325 403.499 580.385 403.499 cv
585.445 403.499 589.555 407.599 589.555 412.659 cv
589.555 417.719 585.445 421.819 580.385 421.819 cv
575.325 421.819 571.225 417.719 571.225 412.659 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
642.755 452.309 mo
642.755 447.249 646.855 443.149 651.915 443.149 cv
656.975 443.149 661.075 447.249 661.075 452.309 cv
661.075 457.369 656.975 461.469 651.915 461.469 cv
646.855 461.469 642.755 457.369 642.755 452.309 cv
cp
.549523 0 .150759 0 cmyk
ef
642.755 452.309 mo
642.755 447.249 646.855 443.149 651.915 443.149 cv
656.975 443.149 661.075 447.249 661.075 452.309 cv
661.075 457.369 656.975 461.469 651.915 461.469 cv
646.855 461.469 642.755 457.369 642.755 452.309 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
[4 2 ] 0 dsh
681.015 435.319 mo
681.015 411.049 644.215 391.379 598.815 391.379 cv
553.415 391.379 516.605 411.049 516.605 435.319 cv
516.605 459.589 553.415 479.259 598.815 479.259 cv
644.215 479.259 681.015 459.589 681.015 435.319 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
551.015 488.209 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
551.015 488.209 mo
(\0009) false chp
.68643 lw
[] 0 dsh
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
563.015 488.209 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
563.015 488.209 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
575.015 488.209 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
575.015 488.209 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
587.015 488.209 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
587.015 488.209 mo
(\000\024) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
599.415 488.209 mo
(\004q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
599.415 488.209 mo
(\004q) false chp
@
.75259 .511162 0 0 cmyk
/KKFUDU+SimHei-GBK-EUC-H-Identity-H findfont [30.025 0 0 -30.025 0 0 ]msf
581.865 463.539 mo
(\001\012\001\012)
[29.9998 0 ]xsh
1 /0 /CSD get_res sepcs
.9529 sep
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
435.665 384.789 mo
(\000\()sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
435.665 384.789 mo
(\000\() false chp
.68571 lw
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
447.665 384.789 mo
(\0002)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
447.665 384.789 mo
(\0002) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
459.665 384.789 mo
(\0005)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
459.665 384.789 mo
(\0005) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
471.713 384.789 mo
(\000\022)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
471.713 384.789 mo
(\000\022) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
484.457 384.789 mo
(\0007)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
484.457 384.789 mo
(\0007) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
496.457 384.789 mo
(\0002)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
496.457 384.789 mo
(\0002) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
508.457 384.789 mo
(\0005)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
508.457 384.789 mo
(\0005) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
304.815 422.939 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
304.815 422.939 mo
(\0009) false chp
.68643 lw
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
316.828 422.939 mo
(\000V)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
316.828 422.939 mo
(\000V) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
328.84 422.939 mo
(\000\022)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
328.84 422.939 mo
(\000\022) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
340.853 422.939 mo
(\000/)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
340.853 422.939 mo
(\000/) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
353.538 422.939 mo
(\000E)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
353.538 422.939 mo
(\000E) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
300.265 459.039 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
300.265 459.039 mo
(\0009) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
312.265 459.039 mo
(\0000)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
312.265 459.039 mo
(\0000) false chp
@
1 lw
1 lc
1 lj
480.845 290.859 mo
511.225 290.989 523.515 301.199 549.285 303.679 cv
555.395 304.259 562.255 304.419 566.005 305.099 cv
583.265 308.249 535.085 322.619 502.495 327.749 cv
480.925 331.149 466.175 330.489 457.145 340.479 cv
452.315 345.819 449.125 354.189 450.045 360.319 cv
452.805 378.739 492.655 376.969 522.325 381.609 cv
542.635 384.789 558.175 390.979 561.985 407.149 cv
565.165 420.619 560.195 441.019 564.805 452.499 cv
568.055 460.609 576.085 464.279 581.805 461.009 cv
587.635 457.689 591.075 447.169 594.295 435.509 cv
597.325 424.549 600.165 412.589 597.425 404.329 cv
592.515 389.509 569.635 386.599 551.795 381.629 cv
541.265 378.689 532.485 375.029 525.155 368.859 cv
518.285 363.079 512.685 355.079 513.825 349.009 cv
515.705 339.069 535.695 334.289 551.825 327.769 cv
583.765 314.859 600.595 295.119 634.175 291.449 cv
0 .9617 .904814 0 cmyk
@
633.085 287.989 mo
643.835 290.859 li
633.505 295.009 li
633.085 287.989 li
cp
ef
400.225 641.739 mo
469.075 585.619 li
.75259 .511162 0 0 cmyk
@
400.225 641.739 mo
683.195 585.619 li
@
.25 lw
2 lc
0 lj
[4 2 ] 0 dsh
845.425 666.409 mo
845.425 642.149 814.045 622.469 775.335 622.469 cv
736.625 622.469 705.245 642.149 705.245 666.409 cv
705.245 690.679 736.625 710.349 775.335 710.349 cv
814.045 710.349 845.425 690.679 845.425 666.409 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
1 lw
1 lc
1 lj
[] 0 dsh
784.315 647.359 mo
784.315 689.989 li
.75259 .511162 0 0 cmyk
@
748.695 687.009 mo
749.185 647.359 li
@
739.535 687.009 mo
739.535 681.949 743.635 677.849 748.695 677.849 cv
753.755 677.849 757.855 681.949 757.855 687.009 cv
757.855 692.069 753.755 696.169 748.695 696.169 cv
743.635 696.169 739.535 692.069 739.535 687.009 cv
cp
.751797 0 .870695 0 cmyk
ef
.25 lw
2 lc
0 lj
739.535 687.009 mo
739.535 681.949 743.635 677.849 748.695 677.849 cv
753.755 677.849 757.855 681.949 757.855 687.009 cv
757.855 692.069 753.755 696.169 748.695 696.169 cv
743.635 696.169 739.535 692.069 739.535 687.009 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
580.385 643.749 mo
469.075 585.619 li
.75259 .511162 0 0 cmyk
@
580.385 643.749 mo
683.195 585.619 li
@
749.185 647.359 mo
469.075 585.619 li
@
749.185 647.359 mo
683.195 585.619 li
@
683.195 585.619 mo
784.315 647.359 li
@
469.075 585.619 mo
784.315 647.359 li
@
683.195 585.619 mo
815.035 647.359 li
@
469.075 585.619 mo
815.035 647.359 li
@
775.155 647.359 mo
775.155 642.299 779.255 638.199 784.315 638.199 cv
789.375 638.199 793.475 642.299 793.475 647.359 cv
793.475 652.419 789.375 656.519 784.315 656.519 cv
779.255 656.519 775.155 652.419 775.155 647.359 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
775.155 647.359 mo
775.155 642.299 779.255 638.199 784.315 638.199 cv
789.375 638.199 793.475 642.299 793.475 647.359 cv
793.475 652.419 789.375 656.519 784.315 656.519 cv
779.255 656.519 775.155 652.419 775.155 647.359 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
740.025 647.359 mo
740.025 642.299 744.125 638.199 749.185 638.199 cv
754.245 638.199 758.345 642.299 758.345 647.359 cv
758.345 652.419 754.245 656.519 749.185 656.519 cv
744.125 656.519 740.025 652.419 740.025 647.359 cv
cp
.695583 .0949111 0 0 cmyk
ef
740.025 647.359 mo
740.025 642.299 744.125 638.199 749.185 638.199 cv
754.245 638.199 758.345 642.299 758.345 647.359 cv
758.345 652.419 754.245 656.519 749.185 656.519 cv
744.125 656.519 740.025 652.419 740.025 647.359 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
.9529 sep
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
774.465 621.509 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
774.465 621.509 mo
(\0001) false chp
.68643 lw
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
786.465 621.509 mo
(\000&)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
786.465 621.509 mo
(\000&) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
798.465 621.509 mo
(\000\()sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
798.465 621.509 mo
(\000\() false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
558.815 565.709 mo
(\000')sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
558.815 565.709 mo
(\000') false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
570.84 565.709 mo
(\000&)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
570.84 565.709 mo
(\000&) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
582.865 565.709 mo
(\000*)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
582.865 565.709 mo
(\000*) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
594.89 565.709 mo
(\000:)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24.025 0 0 -24.025 0 0 ]msf
594.89 565.709 mo
(\000:) false chp
@
358.365 540.269 mo
468.925 540.269 li
475.465 540.269 480.765 534.969 480.765 528.429 cv
480.765 515.469 li
480.765 508.929 475.465 503.629 468.925 503.629 cv
358.365 503.629 li
351.835 503.629 346.535 508.929 346.535 515.469 cv
346.535 528.429 li
346.535 534.969 351.835 540.269 358.365 540.269 cv
cp
.75259 .511162 0 0 cmyk
ef
.25 lw
358.365 540.269 mo
468.925 540.269 li
475.465 540.269 480.765 534.969 480.765 528.429 cv
480.765 515.469 li
480.765 508.929 475.465 503.629 468.925 503.629 cv
358.365 503.629 li
351.835 503.629 346.535 508.929 346.535 515.469 cv
346.535 528.429 li
346.535 534.969 351.835 540.269 358.365 540.269 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
0 sep
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
359.865 529.589 mo
(\004P)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
359.865 529.589 mo
(\004P) false chp
.68571 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
383.89 529.589 mo
(\010\327)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
383.89 529.589 mo
(\010\327) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
407.915 529.589 mo
(4\376)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
407.915 529.589 mo
(4\376) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
431.94 529.589 mo
(1%)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
431.94 529.589 mo
(1%) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
456.285 529.589 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
456.285 529.589 mo
(\000\024) false chp
@
657.545 540.189 mo
786.285 540.189 li
793.905 540.189 800.075 534.019 800.075 526.399 cv
800.075 517.339 li
800.075 509.719 793.905 503.549 786.285 503.549 cv
657.545 503.549 li
649.925 503.549 643.755 509.719 643.755 517.339 cv
643.755 526.399 li
643.755 534.019 649.925 540.189 657.545 540.189 cv
cp
.75259 .511162 0 0 cmyk
ef
.25 lw
657.545 540.189 mo
786.285 540.189 li
793.905 540.189 800.075 534.019 800.075 526.399 cv
800.075 517.339 li
800.075 509.719 793.905 503.549 786.285 503.549 cv
657.545 503.549 li
649.925 503.549 643.755 509.719 643.755 517.339 cv
643.755 526.399 li
643.755 534.019 649.925 540.189 657.545 540.189 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 /0 /CSD get_res sepcs
0 sep
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
668.265 529.509 mo
(\004P)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
668.265 529.509 mo
(\004P) false chp
.68571 lw
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
692.29 529.509 mo
(\010\327)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
692.29 529.509 mo
(\010\327) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
716.315 529.509 mo
(4\376)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
716.315 529.509 mo
(4\376) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
740.34 529.509 mo
(1%)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
740.34 529.509 mo
(1%) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
764.685 529.509 mo
(\000\025)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
764.685 529.509 mo
(\000\025) false chp
@
1 lw
1 lc
1 lj
469.075 585.619 mo
582.465 537.549 li
.75259 .511162 0 0 cmyk
@
683.195 585.619 mo
582.465 537.549 li
@
459.915 585.619 mo
459.915 580.559 464.015 576.459 469.075 576.459 cv
474.135 576.459 478.235 580.559 478.235 585.619 cv
478.235 590.679 474.135 594.779 469.075 594.779 cv
464.015 594.779 459.915 590.679 459.915 585.619 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
459.915 585.619 mo
459.915 580.559 464.015 576.459 469.075 576.459 cv
474.135 576.459 478.235 580.559 478.235 585.619 cv
478.235 590.679 474.135 594.779 469.075 594.779 cv
464.015 594.779 459.915 590.679 459.915 585.619 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
674.035 585.619 mo
674.035 580.559 678.135 576.459 683.195 576.459 cv
688.255 576.459 692.355 580.559 692.355 585.619 cv
692.355 590.679 688.255 594.779 683.195 594.779 cv
678.135 594.779 674.035 590.679 674.035 585.619 cv
cp
.695583 .0949111 0 0 cmyk
ef
674.035 585.619 mo
674.035 580.559 678.135 576.459 683.195 576.459 cv
688.255 576.459 692.355 580.559 692.355 585.619 cv
692.355 590.679 688.255 594.779 683.195 594.779 cv
678.135 594.779 674.035 590.679 674.035 585.619 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
573.305 537.549 mo
573.305 532.489 577.405 528.389 582.465 528.389 cv
587.525 528.389 591.625 532.489 591.625 537.549 cv
591.625 542.609 587.525 546.709 582.465 546.709 cv
577.405 546.709 573.305 542.609 573.305 537.549 cv
cp
.695583 .0949111 0 0 cmyk
ef
573.305 537.549 mo
573.305 532.489 577.405 528.389 582.465 528.389 cv
587.525 528.389 591.625 532.489 591.625 537.549 cv
591.625 542.609 587.525 546.709 582.465 546.709 cv
577.405 546.709 573.305 542.609 573.305 537.549 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
775.155 689.989 mo
775.155 684.929 779.255 680.829 784.315 680.829 cv
789.375 680.829 793.475 684.929 793.475 689.989 cv
793.475 695.049 789.375 699.159 784.315 699.159 cv
779.255 699.159 775.155 695.049 775.155 689.989 cv
cp
.751797 0 .870695 0 cmyk
ef
775.155 689.989 mo
775.155 684.929 779.255 680.829 784.315 680.829 cv
789.375 680.829 793.475 684.929 793.475 689.989 cv
793.475 695.049 789.375 699.159 784.315 699.159 cv
779.255 699.159 775.155 695.049 775.155 689.989 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
815.035 647.359 mo
815.305 689.989 li
.75259 .511162 0 0 cmyk
@
805.875 647.359 mo
805.875 642.299 809.975 638.199 815.035 638.199 cv
820.095 638.199 824.205 642.299 824.205 647.359 cv
824.205 652.419 820.095 656.519 815.035 656.519 cv
809.975 656.519 805.875 652.419 805.875 647.359 cv
cp
.695583 .0949111 0 0 cmyk
ef
.25 lw
2 lc
0 lj
805.875 647.359 mo
805.875 642.299 809.975 638.199 815.035 638.199 cv
820.095 638.199 824.205 642.299 824.205 647.359 cv
824.205 652.419 820.095 656.519 815.035 656.519 cv
809.975 656.519 805.875 652.419 805.875 647.359 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
806.145 689.989 mo
806.145 684.929 810.245 680.829 815.305 680.829 cv
820.365 680.829 824.465 684.929 824.465 689.989 cv
824.465 695.049 820.365 699.159 815.305 699.159 cv
810.245 699.159 806.145 695.049 806.145 689.989 cv
cp
.751797 0 .870695 0 cmyk
ef
806.145 689.989 mo
806.145 684.929 810.245 680.829 815.305 680.829 cv
820.365 680.829 824.465 684.929 824.465 689.989 cv
824.465 695.049 820.365 699.159 815.305 699.159 cv
810.245 699.159 806.145 695.049 806.145 689.989 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
1 lw
1 lc
1 lj
362.775 682.529 mo
398.975 643.749 li
.75259 .511162 0 0 cmyk
@
391.465 683.399 mo
398.975 643.749 li
@
470.495 683.399 mo
398.975 643.749 li
@
353.615 682.529 mo
353.615 677.469 357.715 673.369 362.775 673.369 cv
367.835 673.369 371.945 677.469 371.945 682.529 cv
371.945 687.589 367.835 691.689 362.775 691.689 cv
357.715 691.689 353.615 687.589 353.615 682.529 cv
cp
1 /0 /CSD get_res sepcs
.251 sep
ef
.25 lw
2 lc
0 lj
353.615 682.529 mo
353.615 677.469 357.715 673.369 362.775 673.369 cv
367.835 673.369 371.945 677.469 371.945 682.529 cv
371.945 687.589 367.835 691.689 362.775 691.689 cv
357.715 691.689 353.615 687.589 353.615 682.529 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
382.305 683.399 mo
382.305 678.339 386.405 674.239 391.465 674.239 cv
396.525 674.239 400.625 678.339 400.625 683.399 cv
400.625 688.459 396.525 692.559 391.465 692.559 cv
386.405 692.559 382.305 688.459 382.305 683.399 cv
cp
.751797 0 .870695 0 cmyk
ef
382.305 683.399 mo
382.305 678.339 386.405 674.239 391.465 674.239 cv
396.525 674.239 400.625 678.339 400.625 683.399 cv
400.625 688.459 396.525 692.559 391.465 692.559 cv
386.405 692.559 382.305 688.459 382.305 683.399 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
389.815 643.749 mo
389.815 638.689 393.915 634.589 398.975 634.589 cv
404.035 634.589 408.135 638.689 408.135 643.749 cv
408.135 648.809 404.035 652.909 398.975 652.909 cv
393.915 652.909 389.815 648.809 389.815 643.749 cv
cp
.695583 .0949111 0 0 cmyk
ef
389.815 643.749 mo
389.815 638.689 393.915 634.589 398.975 634.589 cv
404.035 634.589 408.135 638.689 408.135 643.749 cv
408.135 648.809 404.035 652.909 398.975 652.909 cv
393.915 652.909 389.815 648.809 389.815 643.749 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
461.335 683.399 mo
461.335 678.339 465.435 674.239 470.495 674.239 cv
475.555 674.239 479.655 678.339 479.655 683.399 cv
479.655 688.459 475.555 692.559 470.495 692.559 cv
465.435 692.559 461.335 688.459 461.335 683.399 cv
cp
.549523 0 .150759 0 cmyk
ef
461.335 683.399 mo
461.335 678.339 465.435 674.239 470.495 674.239 cv
475.555 674.239 479.655 678.339 479.655 683.399 cv
479.655 688.459 475.555 692.559 470.495 692.559 cv
465.435 692.559 461.335 688.459 461.335 683.399 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
[4 2 ] 0 dsh
499.605 666.409 mo
499.605 642.149 462.795 622.469 417.395 622.469 cv
371.995 622.469 335.195 642.149 335.195 666.409 cv
335.195 690.679 371.995 710.349 417.395 710.349 cv
462.795 710.349 499.605 690.679 499.605 666.409 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
369.515 719.419 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
369.515 719.419 mo
(\0009) false chp
.68571 lw
[] 0 dsh
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
381.515 719.419 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
381.515 719.419 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
393.515 719.419 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
393.515 719.419 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
405.515 719.419 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
405.515 719.419 mo
(\000\024) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
417.915 719.419 mo
(\017=)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
417.915 719.419 mo
(\017=) false chp
@
.75259 .511162 0 0 cmyk
/KKFUDU+SimHei-GBK-EUC-H-Identity-H findfont [30 0 0 -30 0 0 ]msf
400.365 694.739 mo
(\001\012\001\012)
[30 0 ]xsh
1 lw
1 lc
1 lj
544.195 682.529 mo
580.385 643.749 li
@
572.885 683.399 mo
580.385 643.749 li
@
651.915 683.399 mo
580.385 643.749 li
@
535.035 682.529 mo
535.035 677.469 539.135 673.369 544.195 673.369 cv
549.255 673.369 553.355 677.469 553.355 682.529 cv
553.355 687.589 549.255 691.689 544.195 691.689 cv
539.135 691.689 535.035 687.589 535.035 682.529 cv
cp
1 /0 /CSD get_res sepcs
.251 sep
ef
.25 lw
2 lc
0 lj
535.035 682.529 mo
535.035 677.469 539.135 673.369 544.195 673.369 cv
549.255 673.369 553.355 677.469 553.355 682.529 cv
553.355 687.589 549.255 691.689 544.195 691.689 cv
539.135 691.689 535.035 687.589 535.035 682.529 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
563.725 683.399 mo
563.725 678.339 567.825 674.239 572.885 674.239 cv
577.945 674.239 582.045 678.339 582.045 683.399 cv
582.045 688.459 577.945 692.559 572.885 692.559 cv
567.825 692.559 563.725 688.459 563.725 683.399 cv
cp
.751797 0 .870695 0 cmyk
ef
563.725 683.399 mo
563.725 678.339 567.825 674.239 572.885 674.239 cv
577.945 674.239 582.045 678.339 582.045 683.399 cv
582.045 688.459 577.945 692.559 572.885 692.559 cv
567.825 692.559 563.725 688.459 563.725 683.399 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
571.225 643.749 mo
571.225 638.689 575.325 634.589 580.385 634.589 cv
585.445 634.589 589.555 638.689 589.555 643.749 cv
589.555 648.809 585.445 652.909 580.385 652.909 cv
575.325 652.909 571.225 648.809 571.225 643.749 cv
cp
.695583 .0949111 0 0 cmyk
ef
571.225 643.749 mo
571.225 638.689 575.325 634.589 580.385 634.589 cv
585.445 634.589 589.555 638.689 589.555 643.749 cv
589.555 648.809 585.445 652.909 580.385 652.909 cv
575.325 652.909 571.225 648.809 571.225 643.749 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
642.755 683.399 mo
642.755 678.339 646.855 674.239 651.915 674.239 cv
656.975 674.239 661.075 678.339 661.075 683.399 cv
661.075 688.459 656.975 692.559 651.915 692.559 cv
646.855 692.559 642.755 688.459 642.755 683.399 cv
cp
.549523 0 .150759 0 cmyk
ef
642.755 683.399 mo
642.755 678.339 646.855 674.239 651.915 674.239 cv
656.975 674.239 661.075 678.339 661.075 683.399 cv
661.075 688.459 656.975 692.559 651.915 692.559 cv
646.855 692.559 642.755 688.459 642.755 683.399 cv
cp
1 /0 /CSD get_res sepcs
.216 sep
@
[4 2 ] 0 dsh
681.015 666.409 mo
681.015 642.149 644.215 622.469 598.815 622.469 cv
553.415 622.469 516.605 642.149 516.605 666.409 cv
516.605 690.679 553.415 710.349 598.815 710.349 cv
644.215 710.349 681.015 690.679 681.015 666.409 cv
cp
1 /0 /CSD get_res sepcs
.9529 sep
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
551.015 719.419 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
551.015 719.419 mo
(\0009) false chp
.68571 lw
[] 0 dsh
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
563.015 719.419 mo
(\0001)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
563.015 719.419 mo
(\0001) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
575.015 719.419 mo
(\000\))sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
575.015 719.419 mo
(\000\)) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
587.015 719.419 mo
(\000\024)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
587.015 719.419 mo
(\000\024) false chp
@
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
599.415 719.419 mo
(\004q)sh
/KKFUDT+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
599.415 719.419 mo
(\004q) false chp
@
.75259 .511162 0 0 cmyk
/KKFUDU+SimHei-GBK-EUC-H-Identity-H findfont [30 0 0 -30 0 0 ]msf
581.865 694.739 mo
(\001\012\001\012)
[30 0 ]xsh
1 /0 /CSD get_res sepcs
.9529 sep
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
435.665 615.989 mo
(\000\()sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
435.665 615.989 mo
(\000\() false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
447.665 615.989 mo
(\0002)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
447.665 615.989 mo
(\0002) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
459.665 615.989 mo
(\0005)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
459.665 615.989 mo
(\0005) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
471.713 615.989 mo
(\000\022)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
471.713 615.989 mo
(\000\022) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
484.457 615.989 mo
(\0007)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
484.457 615.989 mo
(\0007) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
496.457 615.989 mo
(\0002)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
496.457 615.989 mo
(\0002) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
508.457 615.989 mo
(\0005)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
508.457 615.989 mo
(\0005) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
304.815 654.139 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
304.815 654.139 mo
(\0009) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
316.815 654.139 mo
(\000V)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
316.815 654.139 mo
(\000V) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
328.815 654.139 mo
(\000\022)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
328.815 654.139 mo
(\000\022) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
340.815 654.139 mo
(\000/)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
340.815 654.139 mo
(\000/) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
353.535 654.139 mo
(\000E)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
353.535 654.139 mo
(\000E) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
300.265 690.239 mo
(\0009)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
300.265 690.239 mo
(\0009) false chp
@
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
312.265 690.239 mo
(\0000)sh
/KKFUDS+SimHei-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
312.265 690.239 mo
(\0000) false chp
@
1 lw
1 lc
1 lj
480.845 521.949 mo
511.225 522.079 523.515 532.289 549.285 534.769 cv
555.395 535.349 562.255 535.509 566.005 536.189 cv
583.265 539.339 535.085 553.709 502.495 558.839 cv
480.925 562.239 466.175 561.579 457.145 571.569 cv
452.315 576.909 449.125 585.279 450.045 591.409 cv
452.805 609.829 492.655 608.059 522.325 612.699 cv
542.635 615.879 558.175 622.069 561.985 638.239 cv
565.165 651.709 560.195 672.109 564.805 683.589 cv
568.055 691.699 576.085 695.369 581.805 692.099 cv
587.635 688.779 591.075 678.259 594.295 666.599 cv
597.325 655.639 600.165 643.679 597.425 635.419 cv
592.515 620.599 569.635 617.689 551.795 612.719 cv
541.265 609.779 532.485 606.119 525.155 599.949 cv
518.285 594.169 512.685 586.169 513.825 580.099 cv
515.705 570.159 535.695 565.379 551.825 558.859 cv
583.765 545.949 600.595 526.209 634.175 522.539 cv
0 .9617 .904814 0 cmyk
@
633.085 519.079 mo
643.835 521.949 li
633.505 526.099 li
633.085 519.079 li
cp
ef
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/KKFUDU+SimHei-GBK-EUC-H-Identity-H uf
/KKFUDU+SimHei-GBK-EUC-H /CIDFont ur
/KKFUDT+SimHei-GBK-EUC-H-Identity-H uf
/KKFUDT+SimHei-GBK-EUC-H /CIDFont ur
/KKFUDS+SimHei-GBK-EUC-H-Identity-H uf
/KKFUDS+SimHei-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
